// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const getUserByID = `-- name: GetUserByID :one
SELECT id, email, name, birthday, created_at, updated_at
FROM users
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetUserByID(ctx context.Context, id uuid.UUID) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByID, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Name,
		&i.Birthday,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const insertUser = `-- name: InsertUser :exec
INSERT INTO users (email, name, birthday)
VALUES ($1, $2, $3)
`

type InsertUserParams struct {
	Email    sql.NullString
	Name     sql.NullString
	Birthday sql.NullTime
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) error {
	_, err := q.db.ExecContext(ctx, insertUser, arg.Email, arg.Name, arg.Birthday)
	return err
}
